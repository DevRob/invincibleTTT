function getSquares(s){var e=[];return s.forEach(function(t){e.push([]),t.forEach(function(n){e[s.indexOf(t)].push(n)})}),e}var Board=function(s,e){this.dim=s,e?this.squares=getSquares(e):this.init()};Board.prototype.init=function(){this.squares=allItemMatrix(null,this.dim,this.dim)},Board.prototype.getEmptySquares=function(){for(var s=this.squares,e=[],t=0,n=s.length;n>t;t++)for(var l=0,r=s[t].length;r>l;l++)null===s[t][l]&&e.push([t,l]);return e},Board.prototype.move=function(s,e){var t=s[0],n=s[1];null===this.squares[t][n]&&(this.squares[t][n]=e)},Board.prototype.checkWin=function(){self=this,self.lines=[],self.winnerLine=null,self.gameStatus=null,self.lines.extend(self.squares);for(var s=[],e=0,t=self.dim;t>e;e++)s.push([]),self.squares.forEach(function(t){s[e].push(t[e])});self.lines.extend(s);for(var n=[],l=[],r=0,a=self.squares.length;a>r;r++)n.push(self.squares[r][r]),l.push(self.squares[r][Math.abs(r-self.squares[r].length)-1]);self.lines.push(n),self.lines.push(l);for(var e=0,u=self.lines,t=self.lines.length;t>e;e++){var f=new Set(u[e]);if(1===f.size){if(!f.has(null)){if(self.winnerLine=self.lines.indexOf(u[e]),0===u[e][0]){self.gameStatus=1;break}self.gameStatus=2;break}}else 0==self.getEmptySquares().length&&(self.gameStatus=3)}return self.gameStatus},Board.prototype.logBoard=function(){var s=this.squares,e=[];console.log("-------------------"),s.forEach(function(s){s.forEach(function(s){0==s?e.push("O"):1==s?e.push("X"):e.push("-")}),console.log(e),e=[]}),console.log("-------------------")};